% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_focal_run.R
\name{python_focal_run}
\alias{python_focal_run}
\title{Run focal statistics via Python}
\usage{
python_focal_run(
  pathin,
  landscape_name,
  SDM,
  regex = NULL,
  scale,
  fun = "SUM",
  pathout
)
}
\arguments{
\item{pathin, SDM, landscape_name}{Character strings defining the filepath
(\code{pathin/SDM/landscape_name}) containing input rasters to be processed, such as
those created from running \code{\link[=python_focal_prep]{python_focal_prep()}}}

\item{regex}{Optional regular expression to process only a subset of the
rasters in \code{pathin/SDM/landscape_name}}

\item{scale}{String representing the buffer size (in m) within which focal
stats are calculated}

\item{fun}{Function to summarize focal statistics: \code{'SUM'} or \code{'MEAN'}}

\item{pathout}{Filepath for the directory where output rasters should be
written}
}
\value{
Nothing returned to R environment. Writes rasters to \code{pathout} for
each land cover class.
}
\description{
Function to call python script for calculating focal statistics on landscape
rasters via arcpy.
}
\details{
This function calls the \code{focal_stats.py} function to summarize cell
values for the input raster within a buffer distance defined by \code{scale}.
Summary functions may include \code{'SUM'} or \code{'MEAN'}. The default of \verb{fun = SUM'} is intended to be called only after first running
\code{\link[=python_focal_prep]{python_focal_prep()}}, which prepares rasters representing the
presence/absence of individual land cover classes, as defined by each set
of species distribution models, and allows 'SUM' to effectively count the
number of pixels of each land cover class within a given distance. This
function can also be used with \code{fun = 'MEAN'} to estimate the mean
probability of open water for a given land cover class within a given
distance (i.e. _pfld predictors for waterbird models). See vignette.

Important: This function requires the availability of arcpy and Spatial
Analyst extensions. While these statistics can be entirely calculated in R,
arcpy is much faster. See vignette for more details.
}
\examples{
# See vignette
}
\seealso{
\code{\link[=python_focal_prep]{python_focal_prep()}}, \code{\link[=python_focal_finalize]{python_focal_finalize()}}
}
