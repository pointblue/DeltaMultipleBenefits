% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_focal_prep.R
\name{python_focal_prep}
\alias{python_focal_prep}
\title{Prepare landscape rasters for focal statistics via Python}
\usage{
python_focal_prep(
  landscape,
  SDM,
  pathout,
  landscape_name,
  suffix = NULL,
  mask = NULL,
  pixel_value = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{landscape}{SpatRaster created by \code{\link[terra:rast]{terra::rast()}}}

\item{SDM}{The name of intended species distribution model, for which
\code{landscape} will be reclassified: \code{"riparian"}, \code{"waterbird_fall"}, or
\code{"waterbird_win"}}

\item{pathout, landscape_name}{Character strings defining the filepath
(\code{pathout/SDM/landscape_name}) where output rasters should be written}

\item{suffix}{Character string; custom suffix appended to layer names
(optional unless \code{mask} is not \code{NULL})}

\item{mask}{Optional SpatRaster; see Details}

\item{pixel_value}{Numeric value to replace cell values with (optional);
default \code{NULL}}

\item{overwrite}{Logical; passed to \code{\link[terra:writeRaster]{terra::writeRaster()}}; default \code{FALSE}}
}
\value{
Nothing returned to R environment. Writes rasters to \code{pathout} for
each land cover class.
}
\description{
Prepare for running focal statistics on a landscape raster via Python, to
generate inputs for use with species distribution models.
}
\details{
Splits landscape raster into separate layers representing the presence (1) or
absence (0) of each land cover class, then regroups and renames them into the
land cover classes used in by the intended species distribution model
(\code{SDM}), with an optional custom \code{suffix} appended to the layer name. Cell
values representing land cover presence (1) can also optionally be replaced
with a different \code{pixel_value} (e.g., the area of each pixel).

By providing a \code{mask}, this function can also optionally use the land cover
presence layers as a mask to extract the values of another layer (e.g.,
surface water data). To distinguish these layers, \code{suffix} is required to
have two values. See examples.
}
\examples{
#f <- system.file("ex/elev.tif", package="terra")
#r <- terra::rast(f) # add an example
#python_prep(landscape = r, SDM = 'riparian', pathout = 'example')

#try(python_prep(landscape = r, SDM = 'waterbird_win', pathout = 'example',
#pixel_value = 0.09, mask = system.file('ex/elev.tif', package = 'terra')))
## suffix is required if mask is not `NULL`

#python_prep(landscape = r, SDM = 'waterbird_win', pathout = 'example',
#pixel_value = 0.09, mask = system.file('ex/elev.tif', package = 'terra'),
#suffix = c('_area', '_elev'))
}
\seealso{
\code{\link[=python_focal_run]{python_focal_run()}}, \code{\link[=python_focal_finalize]{python_focal_finalize()}}
}
