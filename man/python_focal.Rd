% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_stats.R
\name{python_focal}
\alias{python_focal}
\title{Run focal statistics and calculate distance via Python}
\usage{
python_focal(
  pathin,
  landscape_name,
  SDM,
  regex = NULL,
  scale,
  fun = "SUM",
  pathout
)
}
\arguments{
\item{pathin}{Filepath for the directory containing input rasters to be
processed, such as those created from running \link{python_focal_prep}}

\item{landscape_name}{Subdirectory containing the rasters for a target
landscape scenario for generating focal_stats}

\item{SDM}{The name of intended species distribution model: \code{"riparian"},
\code{"waterbird_fall"}, or \code{"waterbird_win"}}

\item{regex}{Optional regular expression to process only a subset of the
rasters in \code{pathin}/\code{landscape_name}}

\item{scale}{String representing the buffer size (in m) within which focal
stats are calculated}

\item{fun}{Function to summarize focal statistics: \code{'SUM'} or \code{'MEAN'}}

\item{pathout}{For \code{python_focal}, filepath for the directory where output
rasters should be written; for \code{python_dist} full filepath including
specific filename ending in '.tif'}

\item{copyto}{Optional character string containing alternate \code{landscape_name}
to which the results of \code{\link[=python_dist]{python_dist()}} should be copied.}

\item{maskpath}{Optional filepath to a raster that should be used to mask the
output, e.g. a study area boundary}

\item{overwrite}{Logical; passed to \code{\link[terra:writeRaster]{terra::writeRaster()}}}
}
\value{
Nothing; all files written to \code{pathout}
}
\description{
Functions to call python scripts for calculating focal statistics and
Euclidean distances on landscape rasters via arcpy.
}
\details{
\code{python_focal} calls the \code{focal_stats.py} function to summarize cell values
for the input raster within a buffer distance defined by \code{scale}. Summary
functions may include \code{'SUM'} or \code{'MEAN'}.

\code{python_dist} calls the \code{dist_stats.py} function to calculate the Euclidean
distance (in m) for all cells in the input raster without a value to the
nearest cell with a value (e.g., for calculating distance to a crane roost or
a stream).

Important: These functions require the availability of arcpy and Spatial
Analyst extensions. While these statistics can be entirely calculated in R,
arcpy is much faster. See vignette for more details.
}
\examples{
# See vignette
}
