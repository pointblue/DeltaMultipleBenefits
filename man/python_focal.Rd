% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_focal.R
\name{python_focal}
\alias{python_focal}
\title{Run focal statistics via Python}
\usage{
python_focal(
  pathin,
  landscape_name,
  SDM,
  regex = NULL,
  scale,
  fun = "SUM",
  pathout
)
}
\arguments{
\item{pathin}{Filepath for the directory containing input rasters to be
processed, such as those created from running \link{python_focal_prep}}

\item{landscape_name}{Subdirectory containing the rasters for a target
landscape scenario for generating focal_stats}

\item{SDM}{The name of intended species distribution model: \code{"riparian"},
\code{"waterbird_fall"}, or \code{"waterbird_win"}}

\item{regex}{Optional regular expression to process only a subset of the
rasters in \code{pathin/landscape_name}}

\item{scale}{String representing the buffer size (in m) within which focal
stats are calculated}

\item{fun}{Function to summarize focal statistics: \code{'SUM'} or \code{'MEAN'}}

\item{pathout}{Filepath for the directory where output rasters should be
written}
}
\value{
Nothing; all files written to \code{pathout}
}
\description{
Function to call python script for calculating focal statistics on landscape
rasters via arcpy.
}
\details{
Calls the \code{focal_stats.py} function to summarize cell values for the input
raster within a buffer distance defined by \code{scale}. Summary functions may
include \code{'SUM'} or \code{'MEAN'}.

Important: This function requires the availability of arcpy and Spatial
Analyst extensions. While these statistics can be entirely calculated in R,
arcpy is much faster. See vignette for more details.
}
\examples{
# See vignette
}
\seealso{
\link{python_dist}
}
