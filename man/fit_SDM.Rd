% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_SDM.R
\name{fit_SDM}
\alias{fit_SDM}
\title{Apply species distribution models to new landscapes.}
\usage{
fit_SDM(
  pathin,
  SDM,
  landscape_name,
  modlist,
  constants = NULL,
  factors = NULL,
  landscape = NULL,
  unsuitable = NULL,
  pathout,
  overwrite = FALSE
)
}
\arguments{
\item{pathin, SDM, landscape_name}{Character strings defining the filepath
(\code{pathin/SDM/landscape_name}) containing new predictor rasters to include
in the model, such as those created from running \code{\link[=python_focal_finalize]{python_focal_finalize()}}}

\item{modlist}{List of model objects of class 'gbm' representing the
distribution models to which new predictors should be fit.}

\item{constants}{optional dataframe containing predictors with a constant
value that should be applied to all pixels. See Details.}

\item{factors}{optinal list of named lists defining categorical predictors
included in distribution models. See Details.}

\item{landscape}{optional SpatRaster corresponding to the landscape
represented by the predictors contained in \code{pathin/landscape_name}, used to
identify the locations of \code{unsuitable} land covers. Must be provided if
\code{unsuitable} is not \code{NULL}.}

\item{unsuitable}{optional vector of numerical values representing the land
cover classifications that should be considered unsuitable \emph{a priori}. If
not \code{NULL}, \code{landcape} must also be provided.}

\item{pathout}{Character string defining the filepath
(\code{pathout/SDM/landscape_name}) where output rasters should be written}

\item{overwrite}{Logical; passed to \code{\link[terra:writeRaster]{terra::writeRaster()}}}
}
\value{
Nothing returned to R environment. Writes rasters to \code{pathout} for
each model in \code{modlist}
}
\description{
Fit previously-developed species distribution models for riparian landbird
species and waterbird groups during the fall or winter to a new set of
predictors, such as those derived from a new scenario of landscape change.
}
\details{
This function is designed to fit multiple distribution models to the
same set of predictors describing a given landscape. New predictors must
first be created and named to match the predictors included in the original
models, e.g. using \code{\link[=python_focal_prep]{python_focal_prep()}}, \code{\link[=python_focal_run]{python_focal_run()}}, and
\code{\link[=python_focal_finalize]{python_focal_finalize()}}.

\code{constants} are passed to \code{\link[terra:predict]{terra::predict()}} and provide a way to include
constant values for one or more predictors that should be applied to all
pixels. For both riparian and waterbird models, this will include a
predictor representing effort ('area.ha' for riparian landbirds and
'offset' for waterbirds). For riparian landbird models applied only to the
Delta, constants should also include a region predictor used as a
categorical predictor representing the Sacramento Valley (0) or the Delta
or San Joaquin Valley (1). (See vignette)

\code{factors} are also passed to \code{\link[terra:predict]{terra::predict()}} and provide a way to define
categorical predictors. For waterbird models, this is necessary to define
the 'covertype' predictor. (See vignette)

\code{unsuitable} land covers will be presumed to have a predicted value of
zero. The locations of \code{unsuitable} landcovers will be extracted from
\code{landscape}, assigned a value of zero, and overlaid on the model
predictions.
}
\examples{
# See vignette

}
\seealso{
\code{\link[=python_focal_prep]{python_focal_prep()}}, \code{\link[=python_focal_run]{python_focal_run()}},
\code{\link[=python_focal_finalize]{python_focal_finalize()}}, \code{\link[=update_covertype]{update_covertype()}}, \code{\link[=update_pwater]{update_pwater()}},
\code{\link[=update_roosts]{update_roosts()}}, \code{\link[=python_dist]{python_dist()}}
}
